//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CloneFactory
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const cloneFactoryAbi = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'version', internalType: 'uint8', type: 'uint8', indexed: false },
    ],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_address',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: '_validator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'clonefactoryContractPurchased',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_address',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: '_pubkey',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'contractCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_address',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: '_isDeleted',
        internalType: 'bool',
        type: 'bool',
        indexed: false,
      },
    ],
    name: 'contractDeleteUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_address',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'purchaseInfoUpdated',
  },
  {
    type: 'function',
    inputs: [],
    name: 'VALIDATOR_FEE_MULT',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'baseImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],
    name: 'checkWhitelist',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'getContractList',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: '_baseImplementation', internalType: 'address', type: 'address' },
      { name: '_lumerin', internalType: 'address', type: 'address' },
      { name: '_feeRecipient', internalType: 'address', type: 'address' },
      {
        name: '_validatorFeeRateScaled',
        internalType: 'uint16',
        type: 'uint16',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isContractDead',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'lumerin',
    outputs: [{ name: '', internalType: 'contract Lumerin', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'marketplaceFee',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'noMoreWhitelist',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'payMarketplaceFee',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'rentalContracts',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],
    name: 'setAddToWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_contractAddress', internalType: 'address', type: 'address' },
      { name: '_isDeleted', internalType: 'bool', type: 'bool' },
    ],
    name: 'setContractDeleted',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_limit', internalType: 'uint256', type: 'uint256' },
      { name: '_speed', internalType: 'uint256', type: 'uint256' },
      { name: '_length', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '_pubKey', internalType: 'string', type: 'string' },
    ],
    name: 'setCreateNewRentalContract',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_limit', internalType: 'uint256', type: 'uint256' },
      { name: '_speed', internalType: 'uint256', type: 'uint256' },
      { name: '_length', internalType: 'uint256', type: 'uint256' },
      { name: '_profitTarget', internalType: 'int8', type: 'int8' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '_pubKey', internalType: 'string', type: 'string' },
    ],
    name: 'setCreateNewRentalContractV2',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'setDisableWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: 'fee', internalType: 'uint256', type: 'uint256' },
      { name: 'recipient', internalType: 'address', type: 'address' },
    ],
    name: 'setMarketplaceFeeRecipient',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_contractAddress', internalType: 'address', type: 'address' },
      { name: '_cipherText', internalType: 'string', type: 'string' },
      { name: 'termsVersion', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'setPurchaseRentalContract',
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_contractAddress', internalType: 'address', type: 'address' },
      { name: '_validatorAddress', internalType: 'address', type: 'address' },
      { name: '_encrValidatorURL', internalType: 'string', type: 'string' },
      { name: '_encrDestURL', internalType: 'string', type: 'string' },
      { name: 'termsVersion', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'setPurchaseRentalContractV2',
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],
    name: 'setRemoveFromWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_contractAddress', internalType: 'address', type: 'address' },
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_limit', internalType: 'uint256', type: 'uint256' },
      { name: '_speed', internalType: 'uint256', type: 'uint256' },
      { name: '_length', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setUpdateContractInformation',
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_contractAddress', internalType: 'address', type: 'address' },
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_limit', internalType: 'uint256', type: 'uint256' },
      { name: '_speed', internalType: 'uint256', type: 'uint256' },
      { name: '_length', internalType: 'uint256', type: 'uint256' },
      { name: '_profitTarget', internalType: 'int8', type: 'int8' },
    ],
    name: 'setUpdateContractInformationV2',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      {
        name: '_validatorFeeRateScaled',
        internalType: 'uint16',
        type: 'uint16',
      },
    ],
    name: 'setValidatorFeeRate',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'validatorFeeRateScaled',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'whitelist',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'view',
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EC
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ecAbi = [
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'y1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'y2', internalType: 'uint256', type: 'uint256' },
      { name: 'z2', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_ecAdd',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'y3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'y1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_ecDouble',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'y3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'd', internalType: 'uint256', type: 'uint256' },
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'y1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_ecMul',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'y3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [{ name: 'val', internalType: 'uint256', type: 'uint256' }],
    name: '_inverse',
    outputs: [{ name: 'invVal', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'z2', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_jAdd',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'z2', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_jDiv',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'z2', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_jMul',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'z2', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_jSub',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [],
    name: 'a',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'b',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x', internalType: 'uint256', type: 'uint256' },
      { name: 'y', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'compressPoint',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'privKey', internalType: 'uint256', type: 'uint256' },
      { name: 'pubX', internalType: 'uint256', type: 'uint256' },
      { name: 'pubY', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'deriveKey',
    outputs: [
      { name: 'qx', internalType: 'uint256', type: 'uint256' },
      { name: 'qy', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'y1', internalType: 'uint256', type: 'uint256' },
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'y2', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'ecadd',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'y3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'y1', internalType: 'uint256', type: 'uint256' },
      { name: 'scalar', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'ecmul',
    outputs: [
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'y2', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [],
    name: 'gx',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'gy',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: 'base', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: 'modulus', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'modExp',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [],
    name: 'n',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: 'privKey', internalType: 'uint256', type: 'uint256' }],
    name: 'publicKey',
    outputs: [
      { name: 'qx', internalType: 'uint256', type: 'uint256' },
      { name: 'qy', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [{ name: 'compressed', internalType: 'bytes', type: 'bytes' }],
    name: 'recoverY',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'pure',
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Faucet
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const faucetAbi = [
  {
    type: 'constructor',
    inputs: [
      { name: '_lmr', internalType: 'address', type: 'address' },
      { name: '_dailyMaxLmr', internalType: 'uint256', type: 'uint256' },
      { name: '_lmrPayout', internalType: 'uint256', type: 'uint256' },
      { name: '_ethPayout', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_address', internalType: 'address', type: 'address' },
      { name: '_ipAddress', internalType: 'string', type: 'string' },
    ],
    name: 'canClaimTokens',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'cooldownPeriod',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'cooldownStartingTime',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'currentLMRTokenDistribution',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'emptyGeth',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'ethPayout',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'lmrPayout',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'lmrTokenDistributionMax',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'resetDistributedTodayLmr',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_to', internalType: 'address', type: 'address' },
      { name: '_amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setTransferLumerin',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: '_ethPayout', internalType: 'uint256', type: 'uint256' }],
    name: 'setUpdateEthPayout',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: '_lmrPayout', internalType: 'uint256', type: 'uint256' }],
    name: 'setUpdateLmrPayout',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: '_lmr', internalType: 'address', type: 'address' }],
    name: 'setUpdateLumerin',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: '_newOwner', internalType: 'address', type: 'address' }],
    name: 'setUpdateOwner',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_dailyMaxLmr', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setUpdatedailyMaxLmr',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_claiment', internalType: 'address', type: 'address' },
      { name: '_ipAddress', internalType: 'string', type: 'string' },
    ],
    name: 'supervisedClaim',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  { type: 'receive', stateMutability: 'payable' },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Implementation
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const implementationAbi = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'version', internalType: 'uint8', type: 'uint8', indexed: false },
    ],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newCipherText',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'cipherTextUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_reason',
        internalType: 'enum Implementation.CloseReason',
        type: 'uint8',
        indexed: false,
      },
    ],
    name: 'closedEarly',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_buyer',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'contractClosed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_buyer',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'contractPurchased',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newValidatorURL',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
      {
        name: 'newDestURL',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'destinationUpdated',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'fundsClaimed' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_validator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'fundsClaimedValidator',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_address',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'purchaseInfoUpdated',
  },
  {
    type: 'function',
    inputs: [],
    name: 'VALIDATOR_FEE_MULT',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'buyer',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'claimFunds',
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'claimFundsValidator',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'cloneFactory',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      {
        name: 'reason',
        internalType: 'enum Implementation.CloseReason',
        type: 'uint8',
      },
    ],
    name: 'closeEarly',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'contractState',
    outputs: [
      {
        name: '',
        internalType: 'enum Implementation.ContractState',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'encrDestURL',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'encrValidatorURL',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'futureTerms',
    outputs: [
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_limit', internalType: 'uint256', type: 'uint256' },
      { name: '_speed', internalType: 'uint256', type: 'uint256' },
      { name: '_length', internalType: 'uint256', type: 'uint256' },
      { name: '_version', internalType: 'uint32', type: 'uint32' },
      { name: '_profitTarget', internalType: 'int8', type: 'int8' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: '_offset', internalType: 'uint256', type: 'uint256' },
      { name: '_limit', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getHistory',
    outputs: [
      {
        name: '',
        internalType: 'struct Implementation.HistoryEntry[]',
        type: 'tuple[]',
        components: [
          { name: '_goodCloseout', internalType: 'bool', type: 'bool' },
          { name: '_purchaseTime', internalType: 'uint256', type: 'uint256' },
          { name: '_endTime', internalType: 'uint256', type: 'uint256' },
          { name: '_price', internalType: 'uint256', type: 'uint256' },
          { name: '_speed', internalType: 'uint256', type: 'uint256' },
          { name: '_length', internalType: 'uint256', type: 'uint256' },
          { name: '_buyer', internalType: 'address', type: 'address' },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'getPublicVariables',
    outputs: [
      {
        name: '_state',
        internalType: 'enum Implementation.ContractState',
        type: 'uint8',
      },
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_limit', internalType: 'uint256', type: 'uint256' },
      { name: '_speed', internalType: 'uint256', type: 'uint256' },
      { name: '_length', internalType: 'uint256', type: 'uint256' },
      {
        name: '_startingBlockTimestamp',
        internalType: 'uint256',
        type: 'uint256',
      },
      { name: '_buyer', internalType: 'address', type: 'address' },
      { name: '_seller', internalType: 'address', type: 'address' },
      { name: '_encryptedPoolData', internalType: 'string', type: 'string' },
      { name: '_isDeleted', internalType: 'bool', type: 'bool' },
      { name: '_balance', internalType: 'uint256', type: 'uint256' },
      { name: '_hasFutureTerms', internalType: 'bool', type: 'bool' },
      { name: '_version', internalType: 'uint32', type: 'uint32' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'getPublicVariablesV2',
    outputs: [
      {
        name: '_state',
        internalType: 'enum Implementation.ContractState',
        type: 'uint8',
      },
      {
        name: '_terms',
        internalType: 'struct Implementation.Terms',
        type: 'tuple',
        components: [
          { name: '_price', internalType: 'uint256', type: 'uint256' },
          { name: '_limit', internalType: 'uint256', type: 'uint256' },
          { name: '_speed', internalType: 'uint256', type: 'uint256' },
          { name: '_length', internalType: 'uint256', type: 'uint256' },
          { name: '_version', internalType: 'uint32', type: 'uint32' },
          { name: '_profitTarget', internalType: 'int8', type: 'int8' },
        ],
      },
      {
        name: '_startingBlockTimestamp',
        internalType: 'uint256',
        type: 'uint256',
      },
      { name: '_buyer', internalType: 'address', type: 'address' },
      { name: '_seller', internalType: 'address', type: 'address' },
      { name: '_encryptedPoolData', internalType: 'string', type: 'string' },
      { name: '_isDeleted', internalType: 'bool', type: 'bool' },
      { name: '_balance', internalType: 'uint256', type: 'uint256' },
      { name: '_hasFutureTerms', internalType: 'bool', type: 'bool' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'getStats',
    outputs: [
      { name: '_successCount', internalType: 'uint256', type: 'uint256' },
      { name: '_failCount', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'history',
    outputs: [
      { name: '_goodCloseout', internalType: 'bool', type: 'bool' },
      { name: '_purchaseTime', internalType: 'uint256', type: 'uint256' },
      { name: '_endTime', internalType: 'uint256', type: 'uint256' },
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_speed', internalType: 'uint256', type: 'uint256' },
      { name: '_length', internalType: 'uint256', type: 'uint256' },
      { name: '_buyer', internalType: 'address', type: 'address' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_limit', internalType: 'uint256', type: 'uint256' },
      { name: '_speed', internalType: 'uint256', type: 'uint256' },
      { name: '_length', internalType: 'uint256', type: 'uint256' },
      { name: '_profitTarget', internalType: 'int8', type: 'int8' },
      { name: '_seller', internalType: 'address', type: 'address' },
      { name: '_lmrAddress', internalType: 'address', type: 'address' },
      { name: '_cloneFactory', internalType: 'address', type: 'address' },
      { name: '_validator', internalType: 'address', type: 'address' },
      { name: '_pubKey', internalType: 'string', type: 'string' },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'isDeleted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'isLastValidatorNotPaid',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'lumerin',
    outputs: [{ name: '', internalType: 'contract Lumerin', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'pubKey',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'seller',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: 'closeOutType', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setContractCloseOut',
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    inputs: [{ name: '_isDeleted', internalType: 'bool', type: 'bool' }],
    name: 'setContractDeleted',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_encrValidatorURL', internalType: 'string', type: 'string' },
      { name: '_encrDestURL', internalType: 'string', type: 'string' },
    ],
    name: 'setDestination',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_encrValidatorURL', internalType: 'string', type: 'string' },
      { name: '_encrDestURL', internalType: 'string', type: 'string' },
      { name: '_buyer', internalType: 'address', type: 'address' },
      { name: '_validator', internalType: 'address', type: 'address' },
      {
        name: '_validatorFeeRateScaled',
        internalType: 'uint16',
        type: 'uint16',
      },
    ],
    name: 'setPurchaseContract',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_newEncryptedPoolData', internalType: 'string', type: 'string' },
    ],
    name: 'setUpdateMiningInformation',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_limit', internalType: 'uint256', type: 'uint256' },
      { name: '_speed', internalType: 'uint256', type: 'uint256' },
      { name: '_length', internalType: 'uint256', type: 'uint256' },
      { name: '_profitTarget', internalType: 'int8', type: 'int8' },
    ],
    name: 'setUpdatePurchaseInformation',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'startingBlockTimestamp',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'terms',
    outputs: [
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_limit', internalType: 'uint256', type: 'uint256' },
      { name: '_speed', internalType: 'uint256', type: 'uint256' },
      { name: '_length', internalType: 'uint256', type: 'uint256' },
      { name: '_version', internalType: 'uint32', type: 'uint32' },
      { name: '_profitTarget', internalType: 'int8', type: 'int8' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'validator',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'validatorFeeRateScaled',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
    stateMutability: 'view',
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Lumerin
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const lumerinAbi = [
  { type: 'constructor', inputs: [], stateMutability: 'nonpayable' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Paused',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Unpaused',
  },
  {
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burnFrom',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'paused',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'unpause',
    outputs: [],
    stateMutability: 'nonpayable',
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// LumerinToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const lumerinTokenAbi = [
  { type: 'constructor', inputs: [], stateMutability: 'nonpayable' },
  {
    type: 'error',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'allowance', internalType: 'uint256', type: 'uint256' },
      { name: 'needed', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'ERC20InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'balance', internalType: 'uint256', type: 'uint256' },
      { name: 'needed', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'ERC20InsufficientBalance',
  },
  {
    type: 'error',
    inputs: [{ name: 'approver', internalType: 'address', type: 'address' }],
    name: 'ERC20InvalidApprover',
  },
  {
    type: 'error',
    inputs: [{ name: 'receiver', internalType: 'address', type: 'address' }],
    name: 'ERC20InvalidReceiver',
  },
  {
    type: 'error',
    inputs: [{ name: 'sender', internalType: 'address', type: 'address' }],
    name: 'ERC20InvalidSender',
  },
  {
    type: 'error',
    inputs: [{ name: 'spender', internalType: 'address', type: 'address' }],
    name: 'ERC20InvalidSpender',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'nonpayable',
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ValidatorRegistry
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const validatorRegistryAbi = [
  { type: 'error', inputs: [], name: 'AlreadyComplained' },
  { type: 'error', inputs: [], name: 'HostTooLong' },
  { type: 'error', inputs: [], name: 'InsufficientStake' },
  { type: 'error', inputs: [], name: 'InvalidInitialization' },
  { type: 'error', inputs: [], name: 'NotInitializing' },
  {
    type: 'error',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'OwnableInvalidOwner',
  },
  {
    type: 'error',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'OwnableUnauthorizedAccount',
  },
  {
    type: 'error',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'SafeERC20FailedOperation',
  },
  { type: 'error', inputs: [], name: 'Unauthorized' },
  { type: 'error', inputs: [], name: 'ValidatorNotFound' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'version',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'validator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'complainer',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'ValidatorComplain',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'validator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'ValidatorDeregistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'validator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'ValidatorPunished',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'validator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'ValidatorRegisteredUpdated',
  },
  {
    type: 'function',
    inputs: [],
    name: 'activeValidatorsLength',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: 'validator', internalType: 'address', type: 'address' }],
    name: 'forceUpdateActive',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'limit', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'getActiveValidators',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'getValidator',
    outputs: [
      {
        name: '',
        internalType: 'struct ValidatorRegistry.Validator',
        type: 'tuple',
        components: [
          { name: 'stake', internalType: 'uint256', type: 'uint256' },
          { name: 'addr', internalType: 'address', type: 'address' },
          { name: 'pubKeyYparity', internalType: 'bool', type: 'bool' },
          { name: 'lastComplainer', internalType: 'address', type: 'address' },
          { name: 'complains', internalType: 'uint8', type: 'uint8' },
          { name: 'host', internalType: 'string', type: 'string' },
          { name: 'pubKeyX', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'limit', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'getValidators',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: '_token', internalType: 'contract IERC20', type: 'address' },
      { name: '_stakeMinimun', internalType: 'uint256', type: 'uint256' },
      { name: '_stakeRegister', internalType: 'uint256', type: 'uint256' },
      { name: '_punishAmount', internalType: 'uint256', type: 'uint256' },
      { name: '_punishThreshold', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'punishAmount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'punishThreshold',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: 'val', internalType: 'uint256', type: 'uint256' }],
    name: 'setPunishAmount',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: 'val', internalType: 'uint8', type: 'uint8' }],
    name: 'setPunishThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: 'val', internalType: 'uint256', type: 'uint256' }],
    name: 'setStakeMinimum',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: 'val', internalType: 'uint256', type: 'uint256' }],
    name: 'setStakeRegister',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'stakeMinimum',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'stakeRegister',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'token',
    outputs: [{ name: '', internalType: 'contract IERC20', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'totalStake',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'validatorComplain',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'validatorDeregister',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: 'stake', internalType: 'uint256', type: 'uint256' },
      { name: 'pubKeyYparity', internalType: 'bool', type: 'bool' },
      { name: 'pubKeyX', internalType: 'bytes32', type: 'bytes32' },
      { name: 'host', internalType: 'string', type: 'string' },
    ],
    name: 'validatorRegister',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'validators',
    outputs: [
      { name: 'stake', internalType: 'uint256', type: 'uint256' },
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'pubKeyYparity', internalType: 'bool', type: 'bool' },
      { name: 'lastComplainer', internalType: 'address', type: 'address' },
      { name: 'complains', internalType: 'uint8', type: 'uint8' },
      { name: 'host', internalType: 'string', type: 'string' },
      { name: 'pubKeyX', internalType: 'bytes32', type: 'bytes32' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'validatorsLength',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ValidatorRegistryEC
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const validatorRegistryEcAbi = [
  { type: 'error', inputs: [], name: 'AlreadyComplained' },
  { type: 'error', inputs: [], name: 'HostTooLong' },
  { type: 'error', inputs: [], name: 'InsufficientStake' },
  { type: 'error', inputs: [], name: 'InvalidInitialization' },
  { type: 'error', inputs: [], name: 'NotInitializing' },
  {
    type: 'error',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'OwnableInvalidOwner',
  },
  {
    type: 'error',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'OwnableUnauthorizedAccount',
  },
  {
    type: 'error',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'SafeERC20FailedOperation',
  },
  { type: 'error', inputs: [], name: 'Unauthorized' },
  { type: 'error', inputs: [], name: 'ValidatorNotFound' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'version',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'validator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'complainer',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'ValidatorComplain',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'validator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'ValidatorDeregistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'validator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'ValidatorPunished',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'addr', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'pubkey',
        internalType: 'uint256[2]',
        type: 'uint256[2]',
        indexed: false,
      },
    ],
    name: 'ValidatorRegisteredPubkey',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'validator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'ValidatorRegisteredUpdated',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'y1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'y2', internalType: 'uint256', type: 'uint256' },
      { name: 'z2', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_ecAdd',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'y3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'y1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_ecDouble',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'y3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'd', internalType: 'uint256', type: 'uint256' },
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'y1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_ecMul',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'y3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [{ name: 'val', internalType: 'uint256', type: 'uint256' }],
    name: '_inverse',
    outputs: [{ name: 'invVal', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'z2', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_jAdd',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'z2', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_jDiv',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'z2', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_jMul',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'z1', internalType: 'uint256', type: 'uint256' },
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'z2', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_jSub',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'z3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [],
    name: 'a',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'activeValidatorsLength',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'b',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x', internalType: 'uint256', type: 'uint256' },
      { name: 'y', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'compressPoint',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'privKey', internalType: 'uint256', type: 'uint256' },
      { name: 'pubX', internalType: 'uint256', type: 'uint256' },
      { name: 'pubY', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'deriveKey',
    outputs: [
      { name: 'qx', internalType: 'uint256', type: 'uint256' },
      { name: 'qy', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'y1', internalType: 'uint256', type: 'uint256' },
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'y2', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'ecadd',
    outputs: [
      { name: 'x3', internalType: 'uint256', type: 'uint256' },
      { name: 'y3', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [
      { name: 'x1', internalType: 'uint256', type: 'uint256' },
      { name: 'y1', internalType: 'uint256', type: 'uint256' },
      { name: 'scalar', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'ecmul',
    outputs: [
      { name: 'x2', internalType: 'uint256', type: 'uint256' },
      { name: 'y2', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'encryptionKeys',
    outputs: [{ name: 'checksum', internalType: 'bytes32', type: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: 'validator', internalType: 'address', type: 'address' }],
    name: 'forceUpdateActive',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'limit', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'getActiveValidators',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'getValidator',
    outputs: [
      {
        name: '',
        internalType: 'struct ValidatorRegistry.Validator',
        type: 'tuple',
        components: [
          { name: 'stake', internalType: 'uint256', type: 'uint256' },
          { name: 'addr', internalType: 'address', type: 'address' },
          { name: 'pubKeyYparity', internalType: 'bool', type: 'bool' },
          { name: 'lastComplainer', internalType: 'address', type: 'address' },
          { name: 'complains', internalType: 'uint8', type: 'uint8' },
          { name: 'host', internalType: 'string', type: 'string' },
          { name: 'pubKeyX', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'limit', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'getValidators',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'gx',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'gy',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [
      { name: '_token', internalType: 'contract IERC20', type: 'address' },
      { name: '_stakeMinimun', internalType: 'uint256', type: 'uint256' },
      { name: '_stakeRegister', internalType: 'uint256', type: 'uint256' },
      { name: '_punishAmount', internalType: 'uint256', type: 'uint256' },
      { name: '_punishThreshold', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: 'base', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: 'modulus', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'modExp',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [],
    name: 'n',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: 'privKey', internalType: 'uint256', type: 'uint256' }],
    name: 'publicKey',
    outputs: [
      { name: 'qx', internalType: 'uint256', type: 'uint256' },
      { name: 'qy', internalType: 'uint256', type: 'uint256' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [],
    name: 'punishAmount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'punishThreshold',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: 'compressed', internalType: 'bytes', type: 'bytes' }],
    name: 'recoverY',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: 'val', internalType: 'uint256', type: 'uint256' }],
    name: 'setPunishAmount',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: 'val', internalType: 'uint8', type: 'uint8' }],
    name: 'setPunishThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: 'val', internalType: 'uint256', type: 'uint256' }],
    name: 'setStakeMinimum',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: 'val', internalType: 'uint256', type: 'uint256' }],
    name: 'setStakeRegister',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: 'val', internalType: 'bool', type: 'bool' }],
    name: 'setUseEncryption',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'stakeMinimum',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'stakeRegister',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'token',
    outputs: [{ name: '', internalType: 'contract IERC20', type: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'totalStake',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'use_encryption',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'validatorComplain',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [],
    name: 'validatorDeregister',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: 'stake', internalType: 'uint256', type: 'uint256' },
      { name: 'pubKeyYparity', internalType: 'bool', type: 'bool' },
      { name: 'pubKeyX', internalType: 'bytes32', type: 'bytes32' },
      { name: 'host', internalType: 'string', type: 'string' },
    ],
    name: 'validatorRegister',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [
      { name: 'url', internalType: 'string', type: 'string' },
      { name: 'stake', internalType: 'uint256', type: 'uint256' },
      { name: 'pubKeyYparity', internalType: 'bool', type: 'bool' },
      { name: 'pubKeyX', internalType: 'bytes32', type: 'bytes32' },
      { name: 'pubkey', internalType: 'uint256[2]', type: 'uint256[2]' },
    ],
    name: 'validator_register',
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'validators',
    outputs: [
      { name: 'stake', internalType: 'uint256', type: 'uint256' },
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'pubKeyYparity', internalType: 'bool', type: 'bool' },
      { name: 'lastComplainer', internalType: 'address', type: 'address' },
      { name: 'complains', internalType: 'uint8', type: 'uint8' },
      { name: 'host', internalType: 'string', type: 'string' },
      { name: 'pubKeyX', internalType: 'bytes32', type: 'bytes32' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'validatorsLength',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    inputs: [],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
  },
] as const
