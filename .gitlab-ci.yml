stages:
  - test
  - build
  - release-bindings
  - deploy-contracts
  - whitelist-clonefactory
  - populate-hr-contracts

variables:
  CI_GROUP_ID: "15533332" # id of the proxy group

# Sets ENV_NAME=ENV_VALUE in shell and in gitlab ci group variables
# ENV_NAME - variable name
# ENV_VALUE - variable value
# ENV_ENV - variable environment (leave unset for all of the environments)
#
# Gitlab api has a bug: PUT is not working correctly with environment field
# https://gitlab.com/gitlab-org/gitlab/-/issues/9912
# DELETE+POST is used instead
.set-env: &set-env
  - echo "Setting env variable $ENV_NAME=$ENV_VALUE in $ENV_ENV environment"
  - if [ -z "$ENV_ENV" ]; then export ENV_ENV="*"; fi
  - declare "$ENV_NAME=$ENV_VALUE" # sets env variable to the value also in the local shell
  - 'curl -sS --request DELETE
    --header "PRIVATE-TOKEN: $GITLAB_TOKEN"
    "$CI_API_V4_URL/groups/$CI_GROUP_ID/variables/$ENV_NAME?filter\[environment_scope\]=$ENV_ENV"'
  - 'curl -sS --fail --request POST
    --header "PRIVATE-TOKEN: $GITLAB_TOKEN"
    "$CI_API_V4_URL/groups/$CI_GROUP_ID/variables"
    --form "key=$ENV_NAME"
    --form "value=$ENV_VALUE"
    --form "environment_scope=$ENV_ENV"'
  - unset ENV_NAME ENV_VALUE ENV_ENV

# Deploys clonefactory to the blockchain using env variables from the corresponding environment
# Updates the environment url to the etherscan url of the contract
.deploy_clonefactory_template: &deploy_clonefactory_template
  stage: deploy-contracts
  needs: ["compile-contracts"]
  image: node:14-buster
  when: manual
  artifacts:
    reports:
      dotenv: deploy.env
  environment:
    name: dev # The environment.name should be overriden
    url: $DYNAMIC_ENVIRONMENT_URL
  script:
    - cd ./Goerli/clonefactory/
    - make deploy-clonefactory
    - export ENV_NAME="CLONE_FACTORY_ADDRESS" ENV_VALUE=$(cat clonefactory-addr.tmp) ENV_ENV=$CI_ENVIRONMENT_SLUG
    - *set-env
    - export DYNAMIC_ENVIRONMENT_URL="https://goerli.etherscan.io/address/$(cat clonefactory-addr.tmp)"
    - cd ../..
    - echo "DYNAMIC_ENVIRONMENT_URL=$DYNAMIC_ENVIRONMENT_URL" >> deploy.env

.deploy_hr_contracts_template: &deploy_hr_contracts_template
  stage: populate-hr-contracts
  image: node:14-buster
  when: manual
  environment:
    name: dev
  script:
    - cd ./Goerli/clonefactory/
    - make populate-contracts

.whitelist_clonefactory_template: &whitelist_clonefactory_template
  stage: whitelist-clonefactory
  image: node:14-buster
  when: manual
  environment:
    name: dev
    action: prepare
  script:
    - cd ./Goerli/clonefactory/
    - make whitelist-clonefactory

.deploy_lumerintoken_dev_stg: &deploy_lumerintoken_dev_stg
  stage: deploy-contracts
  needs: ["compile-contracts"]
  image: node:14-buster
  when: manual
  script:
    - cd ./Goerli/clonefactory/
    - make deploy-lumerin
    - export ENV_NAME="LUMERIN_TOKEN_ADDRESS" ENV_VALUE=$(cat lumerin-addr.tmp)
    - *set-env

test:
  environment: test
  stage: test
  image: node:14-buster
  tags:
    - glrblue
    - bedrock
    - docker
    - titanio-dev
  allow_failure: true
  only:
    - branches
  script:
    - cd ./Goerli/clonefactory/ && yarn install && make test
  artifacts:
    paths:
      - Goerli/clonefactory/node_modules

compile-contracts:
  stage: build
  image: node:14-buster
  tags:
    - glrblue
    - bedrock
    - docker
    - titanio-dev
  needs: ["test"]
  environment:
    name: dev
    action: prepare
  script:
    - cd ./Goerli/clonefactory/ && yarn install && make compile
  artifacts:
    paths:
      - Goerli/clonefactory/abi
      - Goerli/clonefactory/artifacts
      - Goerli/clonefactory/cache
      - Goerli/clonefactory/node_modules

build-contracts-go:
  stage: build
  needs: ["compile-contracts"]
  image: ethereum/client-go:alltools-stable
  tags:
    - devops
    - bedrock
    - docker
    - titanio-lmn
  script: cd ./Goerli/clonefactory && ./build-go.sh
  artifacts:
    untracked: true
    paths:
      - Goerli/clonefactory/build-go

build-contracts-js:
  stage: build
  needs: ["compile-contracts"]
  image: node:14-buster
  tags:
    - devops
    - bedrock
    - docker
    - titanio-dev
  script: cd ./Goerli/clonefactory && make build-js
  artifacts:
    untracked: true
    paths:
      - Goerli/clonefactory/build-js

deploy-lumerintoken-dev:
  <<: *deploy_lumerintoken_dev_stg
  environment:
    name: dev
  tags:
    - glrblue
    - bedrock
    - docker
    - titanio-dev

deploy-lumerintoken-stg:
  <<: *deploy_lumerintoken_dev_stg
  environment:
    name: stg
  tags:
    - devops
    - bedrock
    - docker
    - titanio-stg

# Will be used only when we will have a separate lumerin token for LMN environment
#
# deploy-lumerintoken-lmn:
#   stage: deploy-contracts
#   needs: ["compile-contracts"]
#   image: node:14-buster
#   when: manual
#   only:
#     - main
#   script:
#     - cd ./Goerli/clonefactory/
#     - make deploy-lumerin
#     - export ENV_NAME="LUMERIN_TOKEN_ADDRESS" ENV_VALUE=$(cat lumerin-addr.tmp) ENV_ENV="lmn"
#     - *set-env

deploy-clonefactory-dev:
  <<: *deploy_clonefactory_template
  environment:
    name: dev
  tags:
    - glrblue
    - bedrock
    - docker
    - titanio-dev
  # only:
  #   - dev

deploy-clonefactory-stg:
  <<: *deploy_clonefactory_template
  environment:
    name: stg
  tags:
    - devops
    - bedrock
    - docker
    - titanio-stg
  # only:
  #   - stg

deploy-clonefactory-lmn:
  <<: *deploy_clonefactory_template
  environment:
    name: lmn
  tags:
    - devops
    - bedrock
    - docker
    - titanio-lmn
  # only:
  #   - main

whitelist-clonefactory-dev:
  <<: *whitelist_clonefactory_template
  needs: ["compile-contracts"]
  environment:
    name: dev
  tags:
    - devops
    - bedrock
    - docker
    - titanio-dev
  # only:
  #   - dev

whitelist-clonefactory-stg:
  <<: *whitelist_clonefactory_template
  needs: ["compile-contracts"]
  environment:
    name: stg
  tags:
    - devops
    - bedrock
    - docker
    - titanio-stg
  # only:
  #   - stg

whitelist-clonefactory-lmn:
  <<: *whitelist_clonefactory_template
  needs: ["compile-contracts"]
  environment:
    name: lmn
  tags:
    - devops
    - bedrock
    - docker
    - titanio-lmn
  # only:
  #   - lmn

populate-hr-contracts-dev:
  <<: *deploy_hr_contracts_template
  needs: ["compile-contracts"]
  environment:
    name: dev
  tags:
    - devops
    - bedrock
    - docker
    - titanio-dev
  # only:
  #   - dev

populate-hr-contracts-stg:
  <<: *deploy_hr_contracts_template
  needs: ["compile-contracts"]
  environment:
    name: stg
  tags:
    - devops
    - bedrock
    - docker
    - titanio-stg
  # only:
  #   - stg

populate-hr-contracts-lmn:
  <<: *deploy_hr_contracts_template
  needs: ["compile-contracts"]
  environment:
    name: lmn
  tags:
    - devops
    - bedrock
    - docker
    - titanio-lmn
  # only:
  #   - main

release-contracts-go:
  stage: release-bindings
  needs: ["build-contracts-go"]
  image: node:14-buster
  when: manual
  tags:
    - devops
    - bedrock
    - docker
    - titanio-lmn
  # only:
  #   - main
  before_script:
    - apt-get -yq update && apt-get -yqq install openssh-client
    - mkdir ~/.ssh
    - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
  script:
    - cp $SSH_KEY_CONTRACTS_GO ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - cd ./Goerli/clonefactory/ && make release-go

release-contracts-js:
  stage: release-bindings
  needs: ["build-contracts-js"]
  image: node:14-buster
  when: manual
  tags:
    - devops
    - bedrock
    - docker
    - titanio-lmn
  # only:
  #   - main
  before_script:
    - apt-get -yq update && apt-get -yqq install openssh-client
    - mkdir ~/.ssh
    - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
  script:
    - cp $SSH_KEY_CONTRACTS_JS ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - cd ./Goerli/clonefactory/ && make release-js
